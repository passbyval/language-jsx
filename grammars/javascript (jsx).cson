fileTypes: []
injectionSelector: "L:source.js"
name: "Javascript (JSX)"
scopeName: "val.jsx"
patterns: [
  # Match JSX expressions: {myVar}
  {
    match: "({)(\\w+)(})"
    captures:
      "1":
        name: "meta.brace.curly.jsx"
      "2":
        name: "variable.jsx"
      "3":
        name: "meta.brace.curly.jsx"
  }
  # Match decorators without function parens: @decorator
  {
    match: "^(@)([A-Za-z]*$)|(@)([\w\s\(){}:\'\"])*"
    captures:
      "0":
        name: "function-call.js"
      "1":
        name: "punctuation.decorator"
      "2":
        name: "entity.name.function.js"
      "3":
        name: "punctuation.decorator"
  }
  {
    # Match class names: SomeClass
    match: "([\\s|^|{])(([A-Z][a-z0-9]+)+)([\\s|$|}.])"
    captures:
      "2":
        name: "entity.name.type.class"
      "3":
        name: "entity.name.type.class"
  }
  # Match object keys and :
  # {
  #   match: "(\\w*)(:)([\\w\\s])*"
  #   captures:
  #     "1":
  #       name: "meta.object-literal.key"
  #     "2":
  #       name: "punctuation.separator.key-value"
  # }
  # Match inline JSX expressions with operators || &&: {myVar && yourVar}
  {
    match: "({)([a-zA-Z0-9]+)\\s(&&|\\|\\|)"
    captures:
      "1":
        name: "meta.brace.curly.jsx"
      "2":
        name: "variable.jsx"
      "3":
        name: "meta.operator.logical.jsx"
  }
  # Match React components: <Component />
  {
    match: "(<\/?)([A-Z][\\w]*)(?:\\.?)(\\w*)"
    captures:
      "1":
        name: "punctuation.definition.tag.begin.jsx"
      "2":
        name: "support.class.component"
      "3":
        name: "support.class.component"
  }
  # Match standard HTML element: <div />, <span />, etc
  {
    match: "(<\/?)([a-z]+)(.*)(>)"
    captures:
      "1":
        name: "punctuation.definition.tag.begin"
      "2":
        name: "entity.name.tag"
      "4":
        name: "punctuation.definition.tag.end."
  }
  # Match single quote string attributes: <Component value='hello' />
  {
    match: "(\\w*)(=)(\\')([\\w-]*)(\\')"
    captures:
      "1":
        name: "entity.other.attribute-name.jsx"
      "2":
        name: "keyword.operator.assignment"
      "3":
        name: "punctuation.definition.string.begin"
      "4":
        name: "string.quoted.single"
      "5":
        name: "punctuation.definition.string.end"
  }
  # Match double quote string attributes: <Component value="hello" />
  {
    match: "(\\w*)(=)(\")([\\w-]*)(\")"
    captures:
      "1":
        name: "entity.other.attribute-name"
      "2":
        name: "keyword.operator.assignment"
      "3":
        name: "punctuation.definition.string.begin"
      "4":
        name: "string.quoted.single"
      "5":
        name: "punctuation.definition.string.end"
  }
  # Match JSX variable attributes: <Component onClick={this.onClick} />
  {
    match: "([\\w*\$*\-]*)(=)({)(this)?(\\.?)([\\s\\w\\'\",:]*)(})"
    captures:
      "1":
        name: "entity.other.attribute-name"
      "2":
        name: "keyword.operator.assignment"
      "3":
        name: "punctuation.section.embedded.begin"
      "4":
        name: "variable.language.this"
      "5":
        name: "punctuation.accessor"
      "6":
        name: "variable.other.property"
      "7":
        name: "punctuation.section.embedded.end"
  }
  # Match rest of attributes, including objects: <Component style={{}} />
  {
    match: "([\\w*\\$*\\-]*)(=)({)({?)"
    captures:
      "1":
        name: "entity.other.attribute-name"
  }
  # Match strings inside JSX attribute object: <Component style={{ color: 'red' }} />
  {
    match: "(\\s*)(\\w+)(:)(\\s*)(\\')(\\w*)(\\')"
    captures:
      "2":
        name: "meta.object-literal.key"
      "3":
        name: "punctuation.separator.key-value"
      "5":
        name: "punctuation.definition.string.begin"
      "6":
        name: "single.quoted.string"
      "7":
        name: "punctuation.definition.string.end"
  }
  {
    match: "(this)(.)"
    captures:
      "1":
        name: "variable.language.this"
  }
]
